{
  "author": {
    "name": "Lloyd Hilaiel",
    "email": "lloyd@hilaiel.com",
    "url": "http://lloyd.io"
  },
  "name": "awsbox",
  "description": "A featherweight, DIY, PaaS system for deploying on NodeJS apps on Amazon's EC2",
  "version": "0.4.4",
  "homepage": "http://awsbox.org",
  "repository": {
    "type": "git",
    "url": "https://github.com/lloyd/awsbox.git"
  },
  "main": "src/awsbox.js",
  "engines": {
    "node": ">=0.4.7"
  },
  "dependencies": {
    "aws-lib": "0.0.5",
    "JSONSelect": "0.4.0",
    "temp": "0.4.0",
    "xml2js": "0.1.13",
    "optimist": "0.3.1",
    "urlparse": "0.0.1",
    "relative-date": "1.1.1",
    "colors": "~0.6.0-1"
  },
  "devDependencies": {},
  "scripts": {},
  "bin": {
    "awsbox": "./awsbox.js"
  },
  "readme": "## A Lightweight DIY PaaS for Amazon Web Services\n\nAmazon Web Services (AWS) \"Elastic Compute Cloud\" provides low cost, instant\non VMs that can be used to deploy any kind of service.  AWS also provides a\nfull set of APIs that make it possible to programatically allocate servers.\nFinally, AWS offers the ability to create \"template\" instances (Amazon Machine\nImages) that are VM snapshots.\n\n*The problem:* For small scale nodejs projects, there's a lot of\nadministrative boiler plate work that one must to set up a machine.\nYou must install web server software, set up security policies and network\naccess, copy up your keypair, determine how you'll deploy your software on the\nnew VM, etc.\n\n\"Platform as a service\" providers like heroku make most of these decisions for\nyou, providing a demand spun \"vm-like\" thing that you can deploy code on by\nadhering to a couple conventions and `git pushing`.  Where heroku breaks down\nis in *generativity* - you are limited to doing things that heroku has thought\nof, and when you want to do something custom (install a new native software\nlibrary, run an experimental database for which you cannot find a third party\nhosted provider) - you are screwed.\n\nAlso, heroku is relatively expensive.  The moment you want to run two\nprocesses, you're paying 0.05$/hr for that process vs. on aws where\nyou can purchase a \"micro\" instance for 0.02$/hr for the whole VM.\nThe final area of expense is in \"add-ons\" - service providers that offer\nthings like hosted databases, email sending, etc.  A small scale database\ncan cost another .015$/hr.\n\nBut Wait!  What about [nodejitsu]?  Well, probably use them: they're\nawesome, smart, admirably share their work, have a free service for\nnon-commercial deployments, and *just work* for most apps.  But\nsometimes you might want full control.  That you?  Read on...  (NOTE:\nawsbox is *built* on lots of nodejistu stuffs).\n  \n  [nodejitsu]: http://nodejitsu.com/\n\nSo what we maybe want is the convenience of Nodejitsu and Heroku, and the\npricing and freedom of a raw amazon image...\n\n*The solution:* **awsbox** is a set of nodejs scripts, a command line utility,\nand a template image (AMI).  Together it allows you to deploy a new server\nfrom the command line that is pre-configured to run your Node.JS service.\n\n## Features\n\n  * **nodejs focused** - While other stacks could be supported in the future,\n    awsbox is laser focused on node.js to start.\n  * **full root access** - awsbox just gets you started, after that you can do\n    Whatever You Want.\n  * **magic ssh key config** - Your SSH key will be copied up and installed for you.\n  * **git push support** - After you provision a vm, it's pre-configured so you can\n    push to deploy\n  * **command line or programmatic usage** - type at it, or script it.\n  * **OS level user isolation** - all deployed code is run with user permissions under\n    a single account.\n  * **HTTP forwarding with custom 503 page** - [http-proxy] is pre-configured to forward\n    requests to your nodejs process bound to a local port.\n  * **SSL support** - By default your process runs with a self-signed cert.  Enabling\n    SSL support is as easy as copying up a private key and certificate in [PEM] format.\n  * **WebSocket support** - AWSBOX fully supports WebSockets, via [socket.io] or otherwise.\n\n  [http-proxy]: https://github.com/nodejitsu/node-http-proxy\n  [PEM]: http://en.wikipedia.org/wiki/X.509\n  [socket.io]: http://socket.io\n\n## Get Started\n\nStart by working through [the tutorial].  Then have a look at the [Hello World] sample app.\nAnd after that, check out [the documentation] in this repository.\n\n  [the tutorial]: https://github.com/mozilla/awsbox/blob/master/doc/TUTORIAL.md\n  [Hello World]: https://github.com/lloyd/awsbox-helloworld\n  [the documentation]: https://github.com/mozilla/awsbox/tree/master/doc\n",
  "readmeFilename": "README.md",
  "_id": "awsbox@0.4.4",
  "_from": "awsbox@"
}
